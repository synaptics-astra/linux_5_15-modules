#ifndef SWITCH_SPECIFIC_IOCTL_H
#define SWITCH_SPECIFIC_IOCTL_H

#include "L2Switch_defs.h"

#ifndef ETH_MAGIC
#define ETH_MAGIC  'g'
#endif

#define SWITCH_EARLY_INIT					_IOWR(ETH_MAGIC, SWITCH_IOCTL_EARLY_INIT, Early_Init)
#define SWITCH_GET_LINKSTATUS				_IOWR(ETH_MAGIC, SWITCH_IOCTL_GET_LINKSTATUS, Port_linkstatus_t)
#define SWITCH_SET_LINKSTATUS				_IOWR(ETH_MAGIC, SWITCH_IOCTL_SET_LINKSTATUS, Port_linkstatus_t)
#define SWITCH_SET_AUTOMDIXPORT				_IOWR(ETH_MAGIC, SWITCH_IOCTL_SET_AUTOMDIXPORT, Port_mdixmode_t)
#define SWITCH_GET_AUTOMDIXPORT				_IOWR(ETH_MAGIC, SWITCH_IOCTL_GET_AUTOMDIXPORT, Port_mdixmode_t)
#define SWITCH_SET_LINKMODE					_IOWR(ETH_MAGIC, SWITCH_IOCTL_SET_LINKMODE, Port_linkmode_set_t)
#define SWITCH_GET_LINKMODE					_IOWR(ETH_MAGIC, SWITCH_IOCTL_GET_LINKMODE, Port_linkmode_get_t)
#define SWITCH_ADD_MACADDR					_IOWR(ETH_MAGIC, SWITCH_IOCTL_ADD_MACADDR, MacAddr_t)
#define SWITCH_DEL_MACADDR					_IOWR(ETH_MAGIC, SWITCH_IOCTL_DEL_MACADDR, MacAddr_t)
#define SWITCH_SET_AGETIMER					_IOWR(ETH_MAGIC, SWITCH_IOCTL_SET_AGETIMER, AgingTimer_t)
#define SWITCH_GET_AGETIMER					_IOWR(ETH_MAGIC, SWITCH_IOCTL_GET_AGETIMER, AgingTimer_t)
#define SWITCH_QOS_INIT						_IOWR(ETH_MAGIC, SWITCH_IOCTL_QOS_INIT, qos_init_t)
#define SWITCH_SET_PORTPRIORITY				_IOWR(ETH_MAGIC, SWITCH_IOCTL_SET_PORTPRIORITY, Port_Priority_t)
#define SWITCH_GET_PORTPRIORITY				_IOWR(ETH_MAGIC, SWITCH_IOCTL_GET_PORTPRIORITY, Port_Priority_t)
#define SWITCH_GET_PRIORITY_REMAPPING		_IOWR(ETH_MAGIC, SWITCH_IOCTL_GET_PRIORITY_REMAPPING, Priority_Remapping_t)
#define SWITCH_SET_PRIORITY_REMAPPING		_IOWR(ETH_MAGIC, SWITCH_IOCTL_SET_PRIORITY_REMAPPING, Priority_Remapping_t)
#define SWITCH_SET_REMAPTODEFAULTS			_IO(  ETH_MAGIC, SWITCH_IOCTL_SET_REMAPTODEFAULTS)
#define SWITCH_SET_MAPPINGPRIORITYTOQUEUE	_IOWR(ETH_MAGIC, SWITCH_IOCTL_SET_MAPPINGPRIORITYTOQUEUE, MappingPriorityToQueue_t)
#define SWITCH_GET_MAPPINGPRIORITYTOQUEUE	_IOWR(ETH_MAGIC, SWITCH_IOCTL_GET_MAPPINGPRIORITYTOQUEUE, MappingPriorityToQueue_t)
#define SWITCH_SET_FLOWCONTROLMODE			_IOWR(ETH_MAGIC, SWITCH_IOCTL_SET_FLOWCONTROLMODE, Flow_Control_t)
#define SWITCH_GET_FLOWCONTROLMODE			_IOWR(ETH_MAGIC, SWITCH_IOCTL_GET_FLOWCONTROLMODE, Flow_Control_t)
#define SWITCH_RATE_LIMIT					_IOWR(ETH_MAGIC, SWITCH_IOCTL_RATE_LIMIT, Rate_Limit_t)
#define SWITCH_SET_PORTMIRROR				_IOWR(ETH_MAGIC, SWITCH_IOCTL_SET_PORTMIRROR, Port_Mirror_t)
#define SWITCH_GET_PORTMIRROR				_IOWR(ETH_MAGIC, SWITCH_IOCTL_GET_PORTMIRROR, Port_Mirror_t)
#define SWITCH_RULES_INIT				_IO(ETH_MAGIC, SWITCH_IOCTL_RULES_INIT)
#define SWITCH_ADD_DEFAULTRULES				_IO(ETH_MAGIC, SWITCH_IOCTL_ADD_DEFAULTRULES)
#define SWITCH_ADD_DOT1XRULES				_IOWR(ETH_MAGIC, SWITCH_IOCTL_ADD_DOT1XRULES,Dot1xRules_t)
#define SWITCH_SHOW_ALLRULES				_IO(ETH_MAGIC, SWITCH_IOCTL_SHOW_ALLRULES)
#define SWITCH_DELETE_ALLRULES				_IO(ETH_MAGIC, SWITCH_IOCTL_DELETE_ALLRULES)
#define SWITCH_SET_RULES				_IOWR(ETH_MAGIC, SWITCH_IOCTL_SET_RULES,Rules_t)
#define SWITCH_SET_RULESONPORT				_IOWR(ETH_MAGIC, SWITCH_IOCTL_SET_RULESONPORT,Rulesonport_t)
#define SWITCH_FORWARD_BPDUS				_IOWR(ETH_MAGIC, SWITCH_IOCTL_FORWARD_BPDUS,ForwardBPDUs_t)
#define SWITCH_FORWARD_ALLPACKETS			_IOWR(ETH_MAGIC, SWITCH_IOCTL_FORWARD_ALLPACKETS,ForwardAllPackets_t)
#define SWITCH_FORWARD_ALLPACKETS_NOREDIRECT		_IOWR(ETH_MAGIC, SWITCH_IOCTL_FORWARD_ALLPACKETS_NOREDIRECT,ForwardAllPacketsNoRedirect_t)
#define SWITCH_DROP_PACKETS				_IOWR(ETH_MAGIC, SWITCH_IOCTL_DROP_PACKETS,DropPackets_t)
#define SWITCH_ISSWITCH_PORTSUPPORT1G			_IOWR(ETH_MAGIC, SWITCH_IOCTL_ISSWITCH_PORTSUPPORT1G,Isswitch_portsupport1g_t)
#define SWITCH_ETHERNET_LEDTEST				_IOWR(ETH_MAGIC, SWITCH_IOCTL_ETHERNET_LEDTEST,LedTest_t)
#define SWITCH_SET_TESTMODE				_IOWR(ETH_MAGIC, SWITCH_IOCTL_SET_TESTMODE,TestMode_t)
#define SWITCH_GET_TESTMODE				_IOWR(ETH_MAGIC, SWITCH_IOCTL_GET_TESTMODE,TestMode_t)
#define SWITCH_VLAN_INIT				_IO(ETH_MAGIC, SWITCH_IOCTL_VLAN_INIT)
#define SWITCH_VLAN_SET_MODE				_IOWR(ETH_MAGIC, SWITCH_IOCTL_VLAN_SET_MODE,VlanSetMode_t)
#define SWITCH_VLAN_GET_MODE				_IOWR(ETH_MAGIC, SWITCH_IOCTL_VLAN_GET_MODE,VlanSetMode_t)
#define SWITCH_VLAN_CREATE				_IOWR(ETH_MAGIC, SWITCH_IOCTL_VLAN_CREATE,VlanCreate_t)
#define SWITCH_VLAN_DELETE				_IOWR(ETH_MAGIC, SWITCH_IOCTL_VLAN_DELETE,VlanDelete_t)
#define SWITCH_VLAN_ADD_PORT				_IOWR(ETH_MAGIC, SWITCH_IOCTL_VLAN_ADD_PORT,VlanAddPort_t)
#define SWITCH_VLAN_SET_PVID				_IOWR(ETH_MAGIC, SWITCH_IOCTL_VLAN_SET_PVID,VlanSetPVID_t)
#define SWITCH_VLAN_GET_PVID				_IOWR(ETH_MAGIC, SWITCH_IOCTL_VLAN_GET_PVID,VlanSetPVID_t)

#define SWITCH_VLAN_NO_SEP				_IOWR(ETH_MAGIC, SWITCH_IOCTL_VLAN_NO_SEP, Vlan_no_sep_t)
#define SWITCH_VLAN_AND_PORT_CREATE				_IOWR(ETH_MAGIC, SWITCH_IOCTL_VLAN_AND_PORT_CREATE, VlanAndPort_t)

#define SWITCH_SET_UNKNOWN_MCAST_FWD_DEST		_IOWR(ETH_MAGIC, SWITCH_IOCTL_SET_UNKNOWN_MCAST_FWD_DEST,VlanSetUnknownMcastFwdDest_t)
#define SWITCH_GET_UNKNOWN_MCAST_FWD_DEST		_IOWR(ETH_MAGIC, SWITCH_IOCTL_GET_UNKNOWN_MCAST_FWD_DEST,VlanSetUnknownMcastFwdDest_t)
#define SWITCH_RESET_LINKONPORT				_IOWR(ETH_MAGIC, SWITCH_IOCTL_RESET_LINKONPORT,Reset_t)
#define SWITCH_RESTARTAUTONEG				_IOWR(ETH_MAGIC, SWITCH_IOCTL_RESTARTAUTONEG,Reset_t)
#define SWITCH_RESETSETTINGS			_IO(ETH_MAGIC, SWITCH_IOCTL_RESETSETTINGS)
#define SWITCH_SET_STPSTATE					_IOWR(ETH_MAGIC, SWITCH_IOCTL_SET_STPSTATE,StpState_t)
#define SWITCH_GET_STPSTATE					_IOWR(ETH_MAGIC, SWITCH_IOCTL_GET_STPSTATE,StpState_t)
#define SWITCH_ISSWITCH_SUPPORTPRIORITYQ	_IOWR(ETH_MAGIC, SWITCH_IOCTL_ISSWITCH_SUPPORTPRIORITYQ,Isswitch_supportPriorityQ_t)
#define SWITCH_ISSWITCH_SUPPORTL2_TRAFFICRULES	_IOWR(ETH_MAGIC, SWITCH_IOCTL_ISSWITCH_SUPPORTL2_TRAFFICRULES,Isswitch_supportL2_TrafficRules_t)
#define SWITCH_ISSWITCH_SUPPORTBPDUS_REDIRECTRULES		_IOWR(ETH_MAGIC, SWITCH_IOCTL_ISSWITCH_SUPPORTBPDUS_REDIRECTRULES,Support_t)
#define SWITCH_VLAN_LEARNINGMODE				_IOWR(ETH_MAGIC, SWITCH_IOCTL_VLAN_LEARNINGMODE,Vlan_Learningmode_t)
#define SWITCH_SWITCHSUPPORT_VLANPORTBASEDMODE	_IOWR(ETH_MAGIC, SWITCH_IOCTL_SWITCHSUPPORT_VLANPORTBASEDMODE,Support_t)
#define SWITCH_SWITCHSUPPORT_VLANDOT1QMODE		_IOWR(ETH_MAGIC, SWITCH_IOCTL_SWITCHSUPPORT_VLANDOT1QMODE,Support_t)
#define SWITCH_SET_DOS_PROTECTION				_IOWR(ETH_MAGIC, SWITCH_IOCTL_SET_DOS_PROTECTION,Dos_protection_t)
#define SWITCH_GET_DOS_PROTECTION				_IOWR(ETH_MAGIC, SWITCH_IOCTL_GET_DOS_PROTECTION,Dos_protection_t)
#define SWITCH_ISSWITCH_SUPPORT_EEE				_IOWR(ETH_MAGIC, SWITCH_IOCTL_ISSWITCH_SUPPORT_EEE,Support_t)
#define SWITCH_SET_EEE_PORT					_IOWR(ETH_MAGIC, SWITCH_IOCTL_SET_EEE_PORT,Port_EEEmode_t)
#define SWITCH_GET_EEE_PORT					_IOWR(ETH_MAGIC, SWITCH_IOCTL_GET_EEE_PORT,Port_EEEmode_t)
#define SWITCH_ISSWITCH_SUPPORT_GREENETHERNET			_IOWR(ETH_MAGIC, SWITCH_IOCTL_ISSWITCH_SUPPORT_GREENETHERNET,Support_t)
#define SWITCH_SET_GREENETHERNET_MODE				_IOWR(ETH_MAGIC, SWITCH_IOCTL_SET_GREENETHERNET_MODE,GreenEthernet_Mode_t)
#define SWITCH_GET_GREENETHERNET_MODE				_IOWR(ETH_MAGIC, SWITCH_IOCTL_GET_GREENETHERNET_MODE,GreenEthernet_Mode_t)
#define SWITCH_SWITCHSUPPORT_VLANSEPMODES			_IOWR(ETH_MAGIC, SWITCH_IOCTL_SWITCH_SWITCHSUPPORT_VLANSEPMODES,VlanSeperation_Mode_t)
#define SWITCH_SWITCHSUPPORT_ACLFIELDS			_IOWR(ETH_MAGIC, SWITCH_IOCTL_SWITCH_SWITCHSUPPORT_ACLFIELDS,AclField_Mode_t)

typedef struct
{
	unsigned int port;
	L2SW_LINK_STATUS linkstatus;
}Port_linkstatus_t;


typedef struct
{
	unsigned int port;
	L2SW_AUTO_MDIX_MODE mdixMode;
}Port_mdixmode_t;


typedef struct
{
	unsigned int port;
	L2SW_LINK_MODE linkmode;
}Port_linkmode_set_t;


typedef struct
{
	unsigned int port;
	L2SW_LINK_MODE linkmode;
	L2SW_LINK_MODE actualmode;
}Port_linkmode_get_t;

typedef struct {
	unsigned int mdixStatus;
}Early_Init;

typedef struct {
	L2SW_MAC mac_addr;
	uint32 portBitMask;
	uint16 vlanId;
	L2SW_LOOKUPTABLE_ENTRY flag;
	L2SW_VLAN_LEARNING_MODE mode;
}MacAddr_t;


typedef struct {
	uint16 ageSecond;
}AgingTimer_t;


typedef struct {
	uint16 queuNum;
}qos_init_t;


typedef struct {
	uint32 src_PortMask;
	uint32 mirror_PortMask;
	L2SW_PORTMIRROR_STATUS mirrorStat;
}Port_Mirror_t;


typedef struct {
	uint32 portBitMask; 
	L2SW_FLOWCONTROL_MODE mode;
}Flow_Control_t;


typedef struct {
	uint32 packetMask;
	uint32 portMask;
	uint32 rate;
}Rate_Limit_t;

typedef struct {
	uint16 priority;
	int remappedPri;
}Priority_Remapping_t;


typedef struct{
	uint16 priority;
	uint16 queue;
}MappingPriorityToQueue_t;


typedef struct{
	uint32 portMask;
	uint16 Priority;
}Port_Priority_t;

typedef struct{
	uint32 portBitMask;
	L2SW_RULE_MODE ruleMode;
}Rulesonport_t;

typedef struct{
	L2SW_RULE_MODE ruleMode;
}Rules_t;

typedef struct{
	uint32 dot1x;
	uint32 dot1xstat;
}Dot1xRules_t;

typedef struct{
	uint32 srcPortBitMask;
	uint32 dstPortBitMask;
	uint32 bpduMask;
	L2SW_PACKET_MODIFY_MODE packetModifyMode;
}ForwardBPDUs_t;

typedef struct{
	uint32 srcPortBitMask;
	uint32 dstPortBitMask;
	uint32 packetMask;
	uint16 vlanId;
	L2SW_PACKET_MODIFY_MODE packetModifyMode;
}ForwardAllPackets_t;

typedef struct{
	uint32 srcPortBitMask;
	uint32 packetMask;
	uint16 vlanId;
	L2SW_PACKET_MODIFY_MODE packetModifyMode;
}ForwardAllPacketsNoRedirect_t;

typedef struct{
	uint32 inPortMask;
	uint32 packetMask;
	uint16 vlanId;
}DropPackets_t;

typedef struct{
	uint32 portMask;
	L2SW_CAPABILITIES stat;	
}Isswitch_portsupport1g_t;

typedef struct{
	L2SW_LED_MODE ledMode;
}LedTest_t;

typedef struct{
	uint32 portMask;
	L2SW_TEST_MODE mode;
}TestMode_t;

typedef struct {
	L2SW_VLAN_MODE mode;
	L2SW_VLAN_STATUS vlanStatus;
}VlanSetMode_t;

typedef struct {
	uint16 vlanId;
	L2SW_VLAN_LEARNING_MODE learningMode;
}VlanCreate_t;

typedef struct {
	uint16 vlanId;
}VlanDelete_t;

typedef struct {
	uint16 vlanId;
	uint32 portMember;
	uint32 portUntagMember;
}VlanAddPort_t;

typedef struct {
	uint16 vlanId;
	uint32 portMask;
}VlanSetPVID_t;

typedef struct {
	unsigned phy2Tags;
	unsigned loop_count;
} Vlan_no_sep_t;

typedef struct {
	uint16 vlanIDStart;
	uint16 vlanIDEnd;
	L2SW_VLAN_LEARNING_MODE learningMode;
	uint32 portMember;
	uint32 portUntagMember;
} VlanAndPort_t;

typedef struct {
	L2SW_UNKNOWN_MCAST_FWD_DEST mode;
}VlanSetUnknownMcastFwdDest_t;

typedef struct{
	uint32 portMask;
}Reset_t;

typedef struct{
	uint32 portMask;
	L2SW_STP_STATE stpState;
}StpState_t;

typedef struct{
	unsigned short pri_q;
	L2SW_CAPABILITIES stat;
}Isswitch_supportPriorityQ_t;

typedef struct{
	unsigned short rules_entries;
	L2SW_CAPABILITIES stat;
}Isswitch_supportL2_TrafficRules_t;

typedef struct{
	L2SW_VLAN_LEARNING_MODE stat;
}Vlan_Learningmode_t;

typedef struct {
	L2SW_CAPABILITIES stat;
}Support_t;

typedef struct{
	L2SW_DOS_MODE_TYPE dostype;
	L2SW_DOS_MODE_STATUS status;
}Dos_protection_t;

typedef struct
{
	unsigned int portMask;
	L2SW_EEE_MODE EEEmode;
}Port_EEEmode_t;

typedef struct
{
	L2SW_GREEN_ETHERNET_MODE GreenEthernetMode;
}GreenEthernet_Mode_t;

typedef struct
{
	L2SW_VLANSEP_MODE VlanSeparationMode;
}VlanSeperation_Mode_t;

typedef struct
{
	L2SW_ACL_FIELD ACLFieldMode;
}AclField_Mode_t;

typedef enum
{
	SWITCH_IOCTL_EARLY_INIT=0,
	SWITCH_IOCTL_GET_LINKSTATUS,
	SWITCH_IOCTL_SET_LINKSTATUS,
	SWITCH_IOCTL_SET_AUTOMDIXPORT,
	SWITCH_IOCTL_GET_AUTOMDIXPORT,
	SWITCH_IOCTL_SET_LINKMODE,
	SWITCH_IOCTL_GET_LINKMODE,
	SWITCH_IOCTL_ADD_MACADDR,
	SWITCH_IOCTL_DEL_MACADDR,
	SWITCH_IOCTL_SET_AGETIMER,
	SWITCH_IOCTL_GET_AGETIMER,
	SWITCH_IOCTL_QOS_INIT,
	SWITCH_IOCTL_SET_PORTPRIORITY,
	SWITCH_IOCTL_GET_PORTPRIORITY,
	SWITCH_IOCTL_GET_PRIORITY_REMAPPING,
	SWITCH_IOCTL_SET_PRIORITY_REMAPPING,
	SWITCH_IOCTL_SET_REMAPTODEFAULTS,
	SWITCH_IOCTL_SET_MAPPINGPRIORITYTOQUEUE,
	SWITCH_IOCTL_GET_MAPPINGPRIORITYTOQUEUE,
	SWITCH_IOCTL_SET_FLOWCONTROLMODE,
	SWITCH_IOCTL_GET_FLOWCONTROLMODE,
	SWITCH_IOCTL_RATE_LIMIT,
	SWITCH_IOCTL_SET_PORTMIRROR,
	SWITCH_IOCTL_GET_PORTMIRROR,
	SWITCH_IOCTL_RULES_INIT,
	SWITCH_IOCTL_ADD_DEFAULTRULES,
	SWITCH_IOCTL_ADD_DOT1XRULES,
	SWITCH_IOCTL_SHOW_ALLRULES,
	SWITCH_IOCTL_DELETE_ALLRULES,
	SWITCH_IOCTL_SET_RULES,
	SWITCH_IOCTL_SET_RULESONPORT,
	SWITCH_IOCTL_FORWARD_BPDUS,
	SWITCH_IOCTL_FORWARD_ALLPACKETS,
	SWITCH_IOCTL_FORWARD_ALLPACKETS_NOREDIRECT,
	SWITCH_IOCTL_DROP_PACKETS,
	SWITCH_IOCTL_ISSWITCH_PORTSUPPORT1G,
	SWITCH_IOCTL_ETHERNET_LEDTEST,
	SWITCH_IOCTL_SET_TESTMODE,
	SWITCH_IOCTL_GET_TESTMODE,
	SWITCH_IOCTL_VLAN_INIT,
	SWITCH_IOCTL_VLAN_SET_MODE,
	SWITCH_IOCTL_VLAN_GET_MODE,
	SWITCH_IOCTL_VLAN_CREATE,
	SWITCH_IOCTL_VLAN_DELETE,
	SWITCH_IOCTL_VLAN_ADD_PORT,
	SWITCH_IOCTL_VLAN_SET_PVID,
	SWITCH_IOCTL_VLAN_GET_PVID,

	SWITCH_IOCTL_VLAN_NO_SEP,
	SWITCH_IOCTL_VLAN_AND_PORT_CREATE,

	SWITCH_IOCTL_SET_UNKNOWN_MCAST_FWD_DEST,
	SWITCH_IOCTL_GET_UNKNOWN_MCAST_FWD_DEST,
	SWITCH_IOCTL_RESET_LINKONPORT,
	SWITCH_IOCTL_RESTARTAUTONEG,
	SWITCH_IOCTL_RESETSETTINGS,
	SWITCH_IOCTL_SET_STPSTATE,
	SWITCH_IOCTL_GET_STPSTATE,
	SWITCH_IOCTL_ISSWITCH_SUPPORTPRIORITYQ,
	SWITCH_IOCTL_ISSWITCH_SUPPORTL2_TRAFFICRULES,
	SWITCH_IOCTL_ISSWITCH_SUPPORTBPDUS_REDIRECTRULES,
	SWITCH_IOCTL_VLAN_LEARNINGMODE,
	SWITCH_IOCTL_SWITCHSUPPORT_VLANPORTBASEDMODE,
	SWITCH_IOCTL_SWITCHSUPPORT_VLANDOT1QMODE,
	SWITCH_IOCTL_SET_DOS_PROTECTION,
	SWITCH_IOCTL_GET_DOS_PROTECTION,
	SWITCH_IOCTL_ISSWITCH_SUPPORT_EEE,
	SWITCH_IOCTL_SET_EEE_PORT,
	SWITCH_IOCTL_GET_EEE_PORT,
	SWITCH_IOCTL_ISSWITCH_SUPPORT_GREENETHERNET,
	SWITCH_IOCTL_SET_GREENETHERNET_MODE,
	SWITCH_IOCTL_GET_GREENETHERNET_MODE,

	SWITCH_IOCTL_SWITCH_SWITCHSUPPORT_VLANSEPMODES,
	SWITCH_IOCTL_SWITCH_SWITCHSUPPORT_ACLFIELDS,

} SWITCH_SPECIFIC_CMD_DSPG_t;

#endif
